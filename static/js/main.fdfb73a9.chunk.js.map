{"version":3,"sources":["actions/index.js","Component/SignIn.js","App.js","reportWebVitals.js","reducers/signIn.js","reducers/index.js","store.js","index.js"],"names":["validate","data","type","payload","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","dispatch","useDispatch","getDetails","event","a","preventDefault","temp","email","test","password","setErrorMsg","requestOptions","method","headers","body","fetch","then","response","json","loginResult","window","location","replace","useState","showPassword","setShowPassword","setEmail","setPassword","errorMsg","Container","component","maxWidth","CssBaseline","className","Avatar","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","e","target","error","helperText","FormControlLabel","control","Checkbox","checked","Button","onClick","Grid","container","item","xs","Box","mt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","user","userId","firstName","lastName","companyName","state","action","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","subscribe","console","log","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdfb73a9.chunk.js","sourcesContent":["export const validate = (data) => {\r\n  return {\r\n    type: \"VALIDATE\",\r\n    payload: { data },\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { validate } from \"../actions/index\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      <Link color=\"inherit\" href=\"https://nexotto.com/\">\r\n        Nexotto\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const getDetails = async (event) => {\r\n    event.preventDefault();\r\n    let temp = {};\r\n    temp.email = /^[a-zA-Z)-9._-]+@[a-zA-Z)-9.-]+\\.[a-zA-Z]{2,4}$/.test(email)\r\n      ? \"\"\r\n      : \"Enter Proper Email Address\";\r\n    temp.password = password ? \"\" : \"Password is Required\";\r\n    setErrorMsg(temp);\r\n    if (temp.email || temp.password) {\r\n      return;\r\n    }\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"applicaation/json\" },\r\n      body: { email: email, password: password },\r\n    };\r\n    await fetch(\r\n      \"https://run.mocky.io/v3/e9fbbabc-ef69-4bf1-9628-f3c9fe991119\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        dispatch(validate(data)); // Data is Dispacthed to Redux Store\r\n        if (data.loginResult === \"SUCCESS\") {\r\n          window.location.replace(\"https://nexotto.com/\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMsg, setErrorMsg] = useState({ email: \"\", password: \"\" });\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            {...(errorMsg.email\r\n              ? { error: true, helperText: errorMsg.email }\r\n              : \"\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            {...(errorMsg.password\r\n              ? { error: true, helperText: errorMsg.password }\r\n              : \"\")}\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={showPassword}\r\n                onChange={() => setShowPassword(showPassword ? false : true)}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Show Password\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={getDetails}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\nimport SignIn from \"./Component/SignIn\";\n\nconst App = () => {\n  return (\n    <>\n      <SignIn />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// import { getDetails } from \"../services/login\";\r\nconst initialState = {\r\n  loginResult: \"\",\r\n  user: {\r\n    userId: \"\",\r\n    email: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    companyName: \"\",\r\n  },\r\n  companyName: \"\",\r\n};\r\n\r\nconst SignIn = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"VALIDATE\":\r\n      return action.payload.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default SignIn;\r\n","import SignIn from \"./signIn\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  SignIn,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\n\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nstore.subscribe(() => console.log(store.getState()));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}